version: "3.7"
services:
  database:
    image: "postgres:12"
    container_name: "db"
    restart: unless-stopped # always on production!
    # expose: # for linked services only!
    # - "5432"
    ports: # Accessible on HOST:54321 # Disable in production!
      - "54321:5432"

    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=${PGDATA}
    volumes:
      - ./db/data:/data
      - ./db/init/:/docker-entrypoint-initdb.d/

    networks:
      app_net:
        ipv4_address: 172.16.0.2

  server:
    container_name: server
    restart: unless-stopped

    build:
      context: ./server
    # expose: # for linked services only!
    # - 2999
    ports:
      - 3999:2999 # disable to only access by container own IP
      - 9339:9229 # debugger port, disable on production
    command: npm run start:dev # npm run start
    links:
      # Link services to access http://db and  http://database inside the container
      - database:db
    depends_on: # not required with links!
      - database

    environment:
      - NODE_ENV=${NODE_ENV}
      # - NODE_ENV=development
    volumes:
      - ./server/src:/app/src
      - ./server/dist:/app/dist
      - /app/node_modules

    networks:
      app_net:
        ipv4_address: 172.16.0.3

  client:
    build:
      context: ./client
    container_name: client
    restart: unless-stopped

    # tty: true
    stdin_open: true
    expose: # for linked services only!
      - 3700
    ports:
      - 3344:3700
    command: npm run start
    links:
      # Link services to access http://server and  http://api inside the container
      - server:api
    depends_on:
      - database
      - server

    environment:
      - CHOKIDAR_USEPOLLING=1
    volumes:
      - ./client:/app
      - /app/node_module
    networks:
      app_net:
        ipv4_address: 172.16.0.4

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/29
